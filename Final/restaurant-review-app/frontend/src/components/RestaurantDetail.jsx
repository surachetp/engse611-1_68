import { useState, useEffect } from 'react';
import ReviewList from './ReviewList';
import ReviewForm from './ReviewForm';
import { getRestaurantById } from '../services/api';

function RestaurantDetail({ restaurantId, onBack }) {
  // ========================================
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô, ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
  // ========================================
  const [restaurant, setRestaurant] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // ========================================
  // useEffect: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà restaurantId ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  // ========================================
  useEffect(() => {
    fetchRestaurantDetail();
  }, [restaurantId]);

  // ========================================
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
  // ========================================
  const fetchRestaurantDetail = async () => {
    try {
      setLoading(true);   // ‡πÄ‡∏£‡∏¥‡πà‡∏° loading
      setError(null);     // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï error
      
      // 1Ô∏è‚É£ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API getRestaurantById
      const result = await getRestaurantById(restaurantId);

      // 2Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ state
      if (result.success) {
        setRestaurant(result.data); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏ô state
      } else {
        setError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ô‡∏µ‡πâ'); // ‡∏Å‡∏£‡∏ì‡∏µ API return false
      }

    } catch (err) {
      setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡πÑ‡∏î‡πâ'); // ‡∏Å‡∏£‡∏ì‡∏µ error
      console.error('RestaurantDetail fetch error:', err);
    } finally {
      setLoading(false); // ‡∏à‡∏ö loading
    }
  };

  // ========================================
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô callback ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà
  // ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å fetchRestaurantDetail ‡πÄ‡∏û‡∏∑‡πà‡∏≠ refresh ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  // ========================================
  const handleReviewAdded = () => {
    fetchRestaurantDetail();
  };

  // ========================================
  // ‡∏Å‡∏£‡∏ì‡∏µ‡πÅ‡∏™‡∏î‡∏á loading / error / ‡∏£‡πâ‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏ö
  // ========================================
  if (loading) return <div className="loading">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>;
  if (error) return <div className="error">{error}</div>;
  if (!restaurant) return <div className="error">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£</div>;

  // ========================================
  // UI ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (Detail Page)
  // ========================================
  return (
    <div className="restaurant-detail">
      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
      <button className="back-button" onClick={onBack}>
        ‚Üê ‡∏Å‡∏•‡∏±‡∏ö
      </button>
      
      {/* ‡∏™‡πà‡∏ß‡∏ô header ‡∏£‡πâ‡∏≤‡∏ô */}
      <div className="detail-header">
        {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏£‡πâ‡∏≤‡∏ô */}
        <img src={restaurant.image} alt={restaurant.name} />

        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô */}
        <div className="detail-info">
          <h1>{restaurant.name}</h1>
          <p className="category">{restaurant.category}</p>
          <p className="description">{restaurant.description}</p>

          {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
          <div className="info-row">
            <span>üìç {restaurant.location}</span>
            <span>üìû {restaurant.phone}</span>
            <span>üïê {restaurant.openHours}</span>
          </div>

          {/* Rating, Price, Total Reviews */}
          <div className="rating-info">
            <span className="rating">
              ‚≠ê {restaurant.averageRating > 0 
                ? restaurant.averageRating.toFixed(1) 
                : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß'}
            </span>
            <span className="price">{'‡∏ø'.repeat(restaurant.priceRange)}</span>
            <span className="total-reviews">({restaurant.totalReviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß)</span>
          </div>
        </div>
      </div>

      {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏µ‡∏ß‡∏¥‡∏ß */}
      <ReviewForm 
        restaurantId={restaurantId} 
        onReviewAdded={handleReviewAdded} 
      />

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß */}
      <ReviewList reviews={restaurant.reviews || []} />
    </div>
  );
}

export default RestaurantDetail;
